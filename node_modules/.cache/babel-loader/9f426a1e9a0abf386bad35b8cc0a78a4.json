{"ast":null,"code":"var _jsxFileName = \"D:\\\\CS Academic\\\\3 year\\\\React\\\\tictactoe\\\\src\\\\Components\\\\Game\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Board from \"../Board/Board\";\nimport Moves from \"../Moves/Moves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [currentGame, setCurrentGame] = useState(Array(9).fill(null)); //[0 1 2 3 4 5 6 7 8]\n\n  const [nextPlayer, setNextPlayer] = useState(\"X\");\n  const [history, sethistory] = useState(null);\n\n  const SquareClick = value => {\n    if (currentGame[value] != null) return;\n    let currentGameTemp = currentGame.slice();\n\n    if (nextPlayer == \"X\") {\n      currentGameTemp[value] = \"X\";\n      setNextPlayer(\"O\");\n    } else {\n      currentGameTemp[value] = \"O\";\n      setNextPlayer(\"X\");\n    }\n\n    setCurrentGame(currentGameTemp);\n  };\n\n  useEffect(() => {\n    var _historyTemp;\n\n    let historyTemp;\n\n    if (!history) {\n      historyTemp = null;\n    } else {\n      historyTemp = history.slice();\n    }\n\n    (_historyTemp = historyTemp) === null || _historyTemp === void 0 ? void 0 : _historyTemp.push(currentGame);\n    sethistory(historyTemp);\n  }, [currentGame]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      SquareClick: value => SquareClick(value),\n      currentGame: currentGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Moves, {\n      history: history,\n      nextPlayer: nextPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"bVZi3kBC8R3OLQlIe/M4kGS4D0Y=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/CS Academic/3 year/React/tictactoe/src/Components/Game/Game.tsx"],"names":["useEffect","useState","Board","Moves","Game","currentGame","setCurrentGame","Array","fill","nextPlayer","setNextPlayer","history","sethistory","SquareClick","value","currentGameTemp","slice","historyTemp","push"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAgBM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAhB,CAA9C,CADyB,CAEzB;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAyB,IAAzB,CAAtC;;AAEA,QAAMY,WAAW,GAAIC,KAAD,IAAmB;AACnC,QAAIT,WAAW,CAACS,KAAD,CAAX,IAAsB,IAA1B,EAAgC;AAChC,QAAIC,eAAe,GAAGV,WAAW,CAACW,KAAZ,EAAtB;;AACA,QAAIP,UAAU,IAAI,GAAlB,EAAuB;AACnBM,MAAAA,eAAe,CAACD,KAAD,CAAf,GAAyB,GAAzB;AACAJ,MAAAA,aAAa,CAAC,GAAD,CAAb;AACH,KAHD,MAGO;AACHK,MAAAA,eAAe,CAACD,KAAD,CAAf,GAAyB,GAAzB;AACAJ,MAAAA,aAAa,CAAC,GAAD,CAAb;AACH;;AACDJ,IAAAA,cAAc,CAACS,eAAD,CAAd;AACH,GAXD;;AAaAf,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,QAAIiB,WAAJ;;AACA,QAAG,CAACN,OAAJ,EAAY;AACRM,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,GAAGN,OAAO,CAACK,KAAR,EAAd;AAEH;;AACD,oBAAAC,WAAW,UAAX,oDAAaC,IAAb,CAAkBb,WAAlB;AACAO,IAAAA,UAAU,CAACK,WAAD,CAAV;AACH,GAVQ,EAUN,CAACZ,WAAD,CAVM,CAAT;AAYA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAES,KAAK,IAAID,WAAW,CAACC,KAAD,CAAxC;AAAiD,MAAA,WAAW,EAAET;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEM,OAAhB;AAAyB,MAAA,UAAU,EAAEF;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArCD;;GAAML,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { SquareValue } from \"../../type\";\r\nimport Board from \"../Board/Board\";\r\nimport Moves from \"../Moves/Moves\";\r\n\r\nconst Game: React.FC = () => {\r\n    const [currentGame, setCurrentGame] = useState<SquareValue[]>(Array(9).fill(null))\r\n    //[0 1 2 3 4 5 6 7 8]\r\n    const [nextPlayer, setNextPlayer] = useState(\"X\");\r\n    const [history, sethistory] = useState<SquareValue[][] | null>(null);\r\n\r\n    const SquareClick = (value: number) => {\r\n        if (currentGame[value] != null) return;\r\n        let currentGameTemp = currentGame.slice();\r\n        if (nextPlayer == \"X\") {\r\n            currentGameTemp[value] = \"X\";\r\n            setNextPlayer(\"O\");\r\n        } else {\r\n            currentGameTemp[value] = \"O\";\r\n            setNextPlayer(\"X\");\r\n        }\r\n        setCurrentGame(currentGameTemp);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let historyTemp;\r\n        if(!history){\r\n            historyTemp = null;\r\n        } else {\r\n            historyTemp = history.slice();\r\n\r\n        }\r\n        historyTemp?.push(currentGame);\r\n        sethistory(historyTemp)\r\n    }, [currentGame])\r\n\r\n    return (\r\n        <div>\r\n            <Board SquareClick={value => SquareClick(value)} currentGame={currentGame}></Board>\r\n            <Moves history={history} nextPlayer={nextPlayer}></Moves>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}